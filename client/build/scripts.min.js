function validarMaxMin(e){var o=document.querySelectorAll('[data-message-for="'+e.id+'"]')[0];if(o){o.innerText="";var t=e.getAttribute("min"),r=e.getAttribute("max"),a=e.value;t&&a<t&&(o.innerText=" o valor não pode ser menor que "+t),r&&a>r&&(o.innerText=" o valor não pode ser maior que "+r)}}function validarMaxMinLength(e){var o=document.querySelectorAll('[data-message-for="'+e.id+'"]')[0];if(console.log("Validanting MaxMinLength: ",e),o){o.innerText="";var t=e.getAttribute("minlength"),r=e.getAttribute("maxlength"),a=(e.value||"").length;t&&a<t&&(o.innerText=" o comprimento não pode ser menor que "+t),r&&a>r&&(o.innerText=" o comprimento não pode ser maior que "+r)}}function clickUpload(e){var o=document.querySelector(e);o.focus(),o.click()}function fileChange(e){var o=parseFloat((e.files[0].size||"")/1024/1024).toFixed(2);document.querySelector("#file-surrogate").value=(e.files[0].name||"")+" - "+o+"MB";var t=document.querySelectorAll('[data-message-for="'+e.id+'"]')[0];t&&(t.innerText="",o>3&&t&&(t.innerText="o arquivo é maior que 3MB"))}function validarCPF(e){var o,t;if(o=0,"00000000000"==e)return!1;for(i=1;i<=9;i++)o+=parseInt(e.substring(i-1,i))*(11-i);if(t=10*o%11,10!=t&&11!=t||(t=0),t!=parseInt(e.substring(9,10)))return!1;for(o=0,i=1;i<=10;i++)o+=parseInt(e.substring(i-1,i))*(12-i);return t=10*o%11,10!=t&&11!=t||(t=0),t==parseInt(e.substring(10,11))}function cpfKeyUp(e){var o=document.querySelectorAll('[data-message-for="'+e.id+'"]')[0];if(o){o.innerText="";var t=(e.value||"").trim().replace("-","");console.log("cpfStr: ",t);var r=validarCPF(t),a=/^\d+$/.test(t);!t||r&&a||(console.log("CPF is invalid"),o&&(o.innerText="CPF inválido"))}}function validaEmail(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test((e||"").trim())}function emailKeyDown(e){var o=document.querySelectorAll('[data-message-for="'+e.id+'"]')[0];o&&(o.innerText="");var t=(e.value||"").trim();t&&!validaEmail(t)&&(console.log("Email is invalid"),o&&(o.innerText="email inválido"))}function confirmaEmail(){var e=document.querySelector("#Email").value,o=document.querySelector("#ConfirmeEmail").value;return e.toLocaleLowerCase()==o.toLocaleLowerCase()}function confirmaEmailOnBlur(e){var o=document.querySelectorAll('[data-message-for="'+e.id+'"]')[0];o&&(o.innerText=""),confirmaEmail()||o&&(o.innerText="o e-mail e a confirmação devem ser iguais.")}function cepFocus(){console.log("cepFocus: ")}function cepBlur(){console.log("cepBlur: ")}function getEndereco(e){function o(e){function o(e,o){var t=document.querySelector(e);t&&(t.value=o)}if(t&&(t.innerText=""),e.readyState===XMLHttpRequest.DONE&&200===e.status){console.log(e.responseText);var r=JSON.parse(e.responseText);o("#Endereco",r.logradouro),r.complemento&&o("#Complemento",r.complemento),r.bairro&&o("#Bairro",r.bairro),o("#Cidade",r.localidade),o("#UF",r.uf),document.querySelectorAll(".cep-wrap .loading.not-found")[0].classList.add("hidden"),document.querySelectorAll(".cep-wrap .loading.searching")[0].classList.add("hidden"),document.querySelectorAll(".cep-wrap .loading.valida-ok")[0].classList.remove("hidden")}else document.querySelectorAll(".cep-wrap .loading.not-found")[0].classList.remove("hidden"),document.querySelectorAll(".cep-wrap .loading.searching")[0].classList.add("hidden"),document.querySelectorAll(".cep-wrap .loading.valida-ok")[0].classList.add("hidden"),t.innerText=" o cep não foi encontrado."}document.querySelectorAll(".cep-wrap .loading.searching")[0].classList.remove("hidden"),document.querySelectorAll(".cep-wrap .loading.not-found")[0].classList.add("hidden"),document.querySelectorAll(".cep-wrap .loading.valida-ok")[0].classList.add("hidden");var t=document.querySelectorAll('[data-message-for="CEP"]')[0];t&&(t.innerText="");var r="https://viacep.com.br/ws/"+e+"/json/",a=new XMLHttpRequest;return a.open("GET",r,!0),a.setRequestHeader("Content-Type","application/json"),a.onreadystatechange=o.bind(null,a),a.send(),a}function validarData(e){var o=e.replace(/\D/g,"-");if(/^\d\d[\\-]\d\d[\\-]\d\d\d\d$/.test(o)&&(o=o.split("-").reverse().join("-")),/^\d\d\d\d[\\-]\d\d[\\-]\d\d$/.test(o)){var t=new Date(dateStr);return t instanceof Date&&isFinite(t)}}function DataNascKeyUp(e){var o=document.querySelectorAll('[data-message-for="'+e.id+'"]')[0];o&&(o.innerText=""),validarData(e.value)||o&&(o.innerText=" data inválida.")}function onFormSubmit(){var e="";document.querySelectorAll(".form-messages")[0].innerText="";var o=document.getElementById("Nome");(o.value||"").length<o.getAttribute("minlength")&&(e="Favor corrigir os campos inválidos");var t=document.getElementById("Sobrenome");(t.value||"").length<t.getAttribute("minlength")&&(e="Favor corrigir os campos inválidos");var r=document.querySelectorAll('[name="Genero"]:checked');r.length&&r[0].value||""||(e="O campo Gênero é obrigatório.");var a=document.getElementById("DataNascimento"),n=(a.value,document.getElementById("Email")),i=n.value||"";document.getElementById("ConfirmeEmail").value;document.getElementById("Celular").value||""||(e="O campo Celular é obrigatório");var l=(document.getElementById("Telefone").value,document.getElementById("CPF")),d=(l.value||"").trim().replace("-",""),c=validaEmail(i),u=validarCPF(d);c&&confirmaEmail()&&u||(e="Favor corrigir os campos inválidos"),d||(e="O campo CPF é obrigatório"),document.getElementById("CEP").value||""||(e="O campo CEP é obrigatório"),document.getElementById("Endereco").value||""||(e="O campo Endereço é obrigatório"),document.getElementById("Numero").value||""||(e="O campo Número é obrigatório");document.getElementById("Complemento").value;document.getElementById("Bairro").value||""||(e="O campo Bairro é obrigatório"),document.getElementById("Cidade").value||""||(e="O campo Cidade é obrigatório"),document.getElementById("UF").value||""||(e="O campo UF é obrigatório");document.getElementById("Anexo").files[0];""==e?(document.querySelector("#cadastro-usuario").submit(),alert("Formulário salvo com sucesso!")):document.querySelectorAll(".form-messages")[0].innerText=e}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
